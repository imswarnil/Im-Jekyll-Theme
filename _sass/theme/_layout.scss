// scss/theme/_layout.scss

.section {
  padding-top: 4rem;
  padding-bottom: 4rem;

  &.is-medium {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
  &.is-large {
    padding-top: 8rem;
    padding-bottom: 8rem;
  }
}

// --- Hero Overrides (This targets Bulma's .hero class directly) ---
// If you use .im-hero-wrapper from _hero.scss, that file handles its own grid.
// This section is if you are styling Bulma's default .hero.
.hero {
  position: relative;
  overflow: hidden;

  --im-current-grid-color: #{$im-grid-line-color-light-bg}; // Default for .hero

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;

    background-image:
      repeating-linear-gradient(var(--im-current-grid-color) 0 1px, transparent 1px 100%),
      repeating-linear-gradient(90deg, var(--im-current-grid-color) 0 1px, transparent 1px 100%);
    background-size: 35px 35px;

    mask-image: radial-gradient(ellipse at center, black 25%, transparent 75%);
    -webkit-mask-image: radial-gradient(ellipse at center, black 25%, transparent 75%);
    opacity: 0.7;
  }

  &.is-primary,
  &.is-link,
  &.is-info,
  &.is-success,
  // &.is-warning, // Warning might be light, depends on $im-warning
  &.is-danger,
  &.is-dark,
  &.is-black,
  &[class*="has-background-"] { // General catch for background helpers
    --im-current-grid-color: #{$im-grid-line-color-dark-bg};
  }

  // Specific override for explicitly light backgrounds, even if a color modifier is present
  // e.g. <section class="hero is-primary is-light">
  &.is-light, &.has-background-light,
  &.is-white, &.has-background-white {
    --im-current-grid-color: #{$im-grid-line-color-light-bg};
  }


  .hero-head,
  .hero-body,
  .hero-foot {
    position: relative;
    z-index: 1;
  }

  .hero-body {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }

  &.is-medium .hero-body {
    padding-top: 6rem; // Matches section.is-medium
    padding-bottom: 6rem;
  }
   &.is-fullheight .hero-body, &.is-fullheight-with-navbar .hero-body {
     align-items: center;
     display: flex;
     > .container {
       flex-grow: 1;
       flex-shrink: 1;
       margin: auto;
       width: 100%;
       text-align: center;
     }
   }
}

.footer {
  background-color: $footer-background-color; // From _variables.scss
  color: $footer-color;                     // From _variables.scss
  padding: $footer-padding;                 // From _variables.scss
  border-top: $footer-border-top;           // From _variables.scss

  a:not(.button) {
    color: $link; // Use the themed link color
    &:hover {
      color: $link-hover;
    }
  }
}