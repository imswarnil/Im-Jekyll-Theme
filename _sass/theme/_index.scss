// scss/theme/_index.scss
// This file combines base, typography, hero, and component styling,
// using only $im- prefixed variables from _variables.scss.

// Import variables at the top of this file if it's the main entry point for theme SCSS
// If main.scss imports _variables.scss first, then this _index.scss, this is not needed here.
// For this self-contained example, let's assume variables are available.
// @import "./variables"; // Example if variables.scss is in the same directory

// =============================================================================
// BASE STYLES (From your previous _index.scss)
// =============================================================================

html {
  background-color: $im-body-background;
  font-size: $im-font-size-base;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  scroll-behavior: smooth;
}

body {
  font-family: $im-family-sans-serif;
  color: $im-text;
  font-weight: $im-font-weight-normal;
  line-height: $im-line-height-base;
  position: relative;
  overflow-x: hidden;
  min-width: 320px;

  &::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    --im-current-body-grid-color: #{$im-grid-line-light-bg};
    background-image:
      repeating-linear-gradient(var(--im-current-body-grid-color) 0 1px, transparent 1px 100%),
      repeating-linear-gradient(90deg, var(--im-current-body-grid-color) 0 1px, transparent 1px 100%);
    background-size: 40px 40px;
    opacity: 0.5;
  }
}

a {
  color: $im-link-color;
  font-weight: $im-font-weight-medium;
  text-decoration: none;
  transition: color 0.2s ease-in-out, text-decoration-color 0.2s ease-in-out, opacity 0.2s ease-in-out;

  &:hover,
  &:focus {
    color: $im-link-color-hover;
    text-decoration: underline;
    text-decoration-color: rgba($im-link-color-hover, 0.5);
  }
  &:active {
    color: $im-link-color-active;
  }
}

img,
svg,
video,
iframe,
embed,
object {
  max-width: 100%;
  height: auto;
  display: block;
}

figure {
  margin: 0 0 $im-block-spacing 0;
  img {
    border-radius: $im-radius;
  }
  figcaption {
    color: $im-text-light;
    font-size: $im-font-size-small;
    font-style: italic;
    margin-top: 0.5em;
    text-align: center;
  }
}

hr {
  background-color: $im-divider-color;
  border: none;
  display: block;
  height: $im-hr-height;
  margin: $im-hr-margin;
}

::selection {
  background-color: rgba($im-primary, 0.8);
  color: $im-primary-invert;
  text-shadow: none;
}
::-moz-selection {
  background-color: rgba($im-primary, 0.8);
  color: $im-primary-invert;
  text-shadow: none;
}

// =============================================================================
// TYPOGRAPHY STYLES (From your previous _index.scss)
// =============================================================================
h1, h2, h3, h4, h5, h6 {
  font-family: $im-family-sans-serif;
  color: $im-text-headings;
  font-weight: $im-heading-default-weight;
  line-height: $im-line-height-heading;
  margin-top: 1.5em;
  margin-bottom: 0.75em;
  &:first-child { margin-top: 0; }
}

h1 { font-size: $size-2; font-weight: $im-font-weight-extrabold; }
h2 { font-size: $size-3; font-weight: $im-font-weight-bold; }
h3 { font-size: $size-4; font-weight: $im-font-weight-semibold; }
h4 { font-size: $size-5; font-weight: $im-font-weight-semibold; }
h5 { font-size: $size-6; font-weight: $im-font-weight-medium; }
h6 { font-size: $im-font-size-small; font-weight: $im-font-weight-medium; text-transform: uppercase; letter-spacing: 0.05em; }

.title {
  font-family: $im-family-sans-serif;
  color: $im-text-headings;
  font-weight: $im-title-default-weight;
  line-height: $im-line-height-heading;
  word-break: break-word;
  strong { color: inherit; font-weight: inherit; }
  &.is-1 { font-weight: $im-font-weight-extrabold; letter-spacing: -0.02em; font-size: $size-1 !important; } // Use Bulma $size-1
  &.is-2 { font-weight: $im-font-weight-bold; letter-spacing: -0.015em; font-size: $size-2 !important; }
  &.is-3 { font-weight: $im-font-weight-semibold; font-size: $size-3 !important; }
  &.is-4 { font-weight: $im-font-weight-semibold; font-size: $size-4 !important; }
  &.is-5 { font-weight: $im-font-weight-medium; font-size: $size-5 !important; }
  &.is-6 { font-weight: $im-font-weight-medium; font-size: $size-6 !important; }
}

.subtitle {
  font-family: $im-family-sans-serif;
  color: $im-subtitle-default-color;
  font-weight: $im-subtitle-default-weight;
  line-height: $im-line-height-base;
  // Sizes .is-1 to .is-6 handled by Bulma if imported
}

p { margin-bottom: $im-block-spacing; }
strong, b { font-weight: $im-strong-weight; color: $im-strong-color; }
em, i { font-style: italic; }
small { font-size: $im-font-size-small; }

blockquote {
  background-color: $im-inline-code-background;
  border-left: 4px solid $im-primary;
  padding: 1.25em 1.5em;
  margin: $im-block-spacing 0;
  border-radius: $im-radius-small;
  color: $im-text-light;
  font-style: italic;
  p:last-child { margin-bottom: 0; }
}

ul, ol, dl { margin-bottom: $im-block-spacing; padding-left: 1.75em; }
li { margin-bottom: 0.5em; }
dt { font-weight: $im-font-weight-semibold; }
dd { margin-left: 1.5em; margin-bottom: 0.75em; }

code:not(pre > code) {
  background-color: $im-inline-code-background;
  color: $im-inline-code-text;
  font-family: $im-family-monospace;
  font-size: 0.875em;
  font-weight: $im-font-weight-normal;
  padding: 0.25em 0.5em; // Adjusted padding slightly
  border-radius: $im-radius-small;
}

pre {
  font-family: $im-family-monospace;
  background-color: $im-code-block-background;
  color: $im-code-block-text;
  font-size: 0.9em;
  line-height: 1.5;
  overflow-x: auto;
  padding: 1.25em 1.5em;
  white-space: pre;
  word-wrap: normal;
  border-radius: $im-radius;
  margin-bottom: $im-block-spacing;
  border: 1px solid darken($im-code-block-background, 5%); // Subtle border for pre

  code {
    background-color: transparent;
    color: inherit;
    font-size: inherit;
    font-weight: inherit;
    padding: 0;
    border-radius: 0;
  }
}

.content { // Styling for elements inside .content class
  font-family: $im-family-sans-serif;
  color: $im-text;
  font-size: $im-font-size-base;
  line-height: $im-line-height-base;

  h1, h2, h3, h4, h5, h6 {
    color: $im-text-headings;
    font-weight: $im-heading-default-weight;
    line-height: $im-line-height-heading;
    // Sizes for .content h1 etc. would typically be larger than standalone h1 if Bulma SCSS is imported
    // If not importing Bulma SCSS, we might need to define them here:
    // Example:
    // h1 { font-size: $size-1; }
    // h2 { font-size: $size-2; }
  }

  p, ul, ol, dl, blockquote, pre, table { margin-bottom: $im-block-spacing; }

  a {
    color: $im-link-color;
    font-weight: $im-font-weight-medium;
    text-decoration: underline;
    text-decoration-color: rgba($im-link-color, 0.4);
    &:hover { color: $im-link-color-hover; text-decoration-color: $im-link-color-hover; }
  }
  strong { color: $im-strong-color; font-weight: $im-strong-weight; }
  blockquote { background-color: $im-inline-code-background; border-left-color: $im-primary; color: $im-text-light; }
  table {
    th { color: $im-text-strong; font-weight: $im-font-weight-semibold; }
    td, th { border-color: $im-divider-color; }
  }
}

// =============================================================================
// HERO STYLES (From your previous _index.scss)
// =============================================================================
.hero {
  &.im-hero-styled {
    position: relative;
    overflow: hidden;
    --im-current-hero-grid-color: #{$im-grid-line-light-bg};
    &::before {
      content: "";
      position: absolute;
      top: 0; left: 0; right: 0; bottom: 0;
      width: 100%; height: 100%;
      pointer-events: none; z-index: 0;
      background-image:
        repeating-linear-gradient(var(--im-current-hero-grid-color) 0 1px, transparent 1px 100%),
        repeating-linear-gradient(90deg, var(--im-current-hero-grid-color) 0 1px, transparent 1px 100%);
      background-size: 35px 35px;
      mask-image: radial-gradient(ellipse at center, black 30%, transparent 70%);
      -webkit-mask-image: radial-gradient(ellipse at center, black 30%, transparent 70%);
      opacity: 0.6;
    }

    &.is-primary, &.is-dark, &.is-black,
    &.has-background-primary, &.has-background-dark, &.has-background-black {
      --im-current-hero-grid-color: #{$im-grid-line-dark-bg};
      .title, .subtitle, .im-hero-pretitle, .im-hero-breadcrumb .breadcrumb a, .im-hero-back-button .button { color: $im-text-invert !important; }
      .im-hero-breadcrumb .breadcrumb-separator { color: rgba($im-text-invert, 0.7) !important; }
      .im-hero-breadcrumb .breadcrumb a:hover { color: lighten($im-text-invert, 15%) !important; }
      .im-hero-back-button .button {
          border-color: rgba($im-text-invert, 0.5) !important;
          &:hover { background-color: rgba($im-text-invert, 0.1) !important; border-color: $im-text-invert !important; }
      }
    }
    &.is-light, &.is-white, &.has-background-light, &.has-background-white {
      --im-current-hero-grid-color: #{$im-grid-line-light-bg};
      .title, .subtitle, .im-hero-pretitle { color: $im-text-headings; }
      .subtitle { color: $im-text; }
      .im-hero-breadcrumb .breadcrumb a { color: $im-link-color !important; }
      .im-hero-breadcrumb .breadcrumb a:hover { color: $im-link-color-hover !important; }
      .im-hero-breadcrumb .breadcrumb-separator { color: $im-text-light !important; }
      .im-hero-back-button .button {
          color: $im-link-color !important; border-color: $im-link-color !important;
          &:hover { background-color: lighten($im-link-color, 40%) !important; color: $im-link-color-hover !important; border-color: $im-link-color-hover !important; }
      }
    }
  }

  &.im-hero-styled .hero-body, &.im-hero-styled .hero-head, &.im-hero-styled .hero-foot { position: relative; z-index: 1; }
  .hero-body { padding: 3rem 1.5rem; }

  .im-hero-pretitle {
    display: block; color: $im-primary; font-size: $im-font-size-small;
    font-weight: $im-font-weight-semibold; text-transform: uppercase;
    letter-spacing: 0.075em; margin-bottom: 0.75rem;
  }
  .hero-body > .title, .hero-body > .container > .title { font-weight: $im-title-default-weight; margin-bottom: 1rem; }
  .hero-body > .subtitle, .hero-body > .container > .subtitle { font-weight: $im-subtitle-default-weight; line-height: 1.7; }

  .im-hero-navigation-top {
    display: flex; justify-content: space-between; align-items: center;
    margin-bottom: 1.5rem; flex-wrap: wrap; gap: 0.5rem;
    &.is-centered-breadcrumb { justify-content: center; .im-hero-breadcrumb { flex-grow: 0; } }
  }
  .im-hero-breadcrumb .breadcrumb {
    font-size: $im-font-size-smaller; margin-bottom: 0;
    ul { margin-left: 0; margin-top:0; }
    li + li::before { color: $im-text-light; }
    a { color: $im-link-color; font-weight: $im-font-weight-normal; &:hover { color: $im-link-color-hover; } }
    li.is-active a { color: $im-text; font-weight: $im-font-weight-medium; pointer-events: none; }
  }
  .im-hero-back-button .button.is-small.is-outlined {
    font-weight: $im-font-weight-medium; border-radius: $im-radius-rounded;
    padding-left: 1em; padding-right: 1em;
    color: $im-link-color; border-color: $im-link-color;
    .icon { margin-right: 0.35em; font-size: 0.9em; i.ph { line-height: 1; } }
    &:hover { background-color: lighten($im-link-color, 40%); color: $im-link-color-hover; border-color: $im-link-color-hover; }
  }

  &.im-hero-home .hero-body { padding-top: 6rem; padding-bottom: 6rem; }
  &.im-hero-page .hero-body, &.im-hero-collection .hero-body { padding-top: 3.5rem; padding-bottom: 3.5rem; }
  &.im-hero-post .hero-body { padding-top: 3rem; padding-bottom: 3rem; }
}

// =============================================================================
// ADDITIONAL COMPONENT STYLES (Expanding beyond initial request)
// =============================================================================

// --- Buttons ---
.button {
  font-family: $im-family-sans-serif;
  font-size: $im-font-size-base; // Default button font size
  font-weight: $im-font-weight-medium;
  line-height: $im-line-height-base;
  color: $im-button-text;
  background-color: $im-button-background;
  border-color: $im-button-border;
  border-width: 1px; // Standard border width
  border-style: solid;
  padding: calc(0.6em - 1px) 1.25em; // Values from $im-button-padding-*
  border-radius: $im-radius;
  cursor: pointer;
  justify-content: center;
  text-align: center;
  white-space: nowrap;
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease, transform 0.15s ease, box-shadow 0.2s ease;
  user-select: none; // Prevent text selection on click

  &:hover {
    background-color: $im-button-hover-background;
    border-color: $im-button-hover-border;
    color: $im-button-text; // Assuming text color doesn't change on hover for primary button
    transform: translateY(-1px);
    box-shadow: $im-shadow-sm; // Subtle shadow on hover
  }

  &:focus {
    outline: none;
    border-color: $im-button-hover-border; // Or a specific focus border color
    box-shadow: 0 0 0 0.125em $im-button-focus-shadow;
  }

  &:active {
    background-color: $im-button-active-background;
    border-color: $im-button-active-border;
    transform: translateY(0px);
    box-shadow: $im-shadow-inner; // Inner shadow on active
  }

  // Sizes
  &.is-small { font-size: $im-font-size-small; padding: calc(0.4em - 1px) 0.8em; }
  &.is-medium { font-size: 1.25rem; padding: calc(0.75em - 1px) 1.5em; } // Bulma's .is-medium size
  &.is-large { font-size: 1.5rem; padding: calc(0.9em - 1px) 1.75em; }   // Bulma's .is-large size

  // Colors (Primary is default)
  &.is-success { background-color: $im-success; border-color: $im-success; color: $im-success-invert;
    &:hover { background-color: $im-success-dark; border-color: $im-success-dark; }
    &:focus { box-shadow: 0 0 0 0.125em rgba($im-success, 0.25); }
    &:active { background-color: darken($im-success-dark, 5%); border-color: darken($im-success-dark, 5%); }
  }
  &.is-warning { background-color: $im-warning; border-color: $im-warning; color: $im-warning-invert;
    &:hover { background-color: $im-warning-dark; border-color: $im-warning-dark; }
    &:focus { box-shadow: 0 0 0 0.125em rgba($im-warning, 0.25); }
    &:active { background-color: darken($im-warning-dark, 5%); border-color: darken($im-warning-dark, 5%); }
  }
  &.is-danger { background-color: $im-danger; border-color: $im-danger; color: $im-danger-invert;
    &:hover { background-color: $im-danger-dark; border-color: $im-danger-dark; }
    &:focus { box-shadow: 0 0 0 0.125em rgba($im-danger, 0.25); }
    &:active { background-color: darken($im-danger-dark, 5%); border-color: darken($im-danger-dark, 5%); }
  }
  &.is-info { background-color: $im-info; border-color: $im-info; color: $im-info-invert;
    &:hover { background-color: $im-info-dark; border-color: $im-info-dark; }
    &:focus { box-shadow: 0 0 0 0.125em rgba($im-info, 0.25); }
    &:active { background-color: darken($im-info-dark, 5%); border-color: darken($im-info-dark, 5%); }
  }
  &.is-light { background-color: $im-divider-color; border-color: $im-divider-color; color: $im-text-strong;
    &:hover { background-color: darken($im-divider-color, 5%); border-color: darken($im-divider-color, 5%); }
    &:focus { box-shadow: 0 0 0 0.125em rgba(darken($im-divider-color,10%), 0.25); }
    &:active { background-color: darken($im-divider-color, 10%); border-color: darken($im-divider-color, 10%); }
  }
  // &.is-link will use primary colors as $im-link-color is $im-primary

  // Outlined Style
  &.is-outlined {
    background-color: transparent;
    border-color: $im-button-border; // Use the default button's border color
    color: $im-button-background;    // Use the default button's background color as text color

    &:hover, &:focus {
      background-color: $im-button-background;
      border-color: $im-button-border;
      color: $im-button-text;
    }
    &.is-primary { border-color: $im-primary; color: $im-primary; &:hover, &:focus { background-color: $im-primary; color: $im-primary-invert; } }
    &.is-success { border-color: $im-success; color: $im-success; &:hover, &:focus { background-color: $im-success; color: $im-success-invert; } }
    &.is-warning { border-color: $im-warning; color: $im-warning; &:hover, &:focus { background-color: $im-warning; color: $im-warning-invert; } }
    &.is-danger { border-color: $im-danger; color: $im-danger; &:hover, &:focus { background-color: $im-danger; color: $im-danger-invert; } }
    &.is-info { border-color: $im-info; color: $im-info; &:hover, &:focus { background-color: $im-info; color: $im-info-invert; } }
    // &.is-link for outlined would follow primary
  }

  // Text Style (like .is-ghost in Bulma)
  &.is-text {
    background-color: transparent;
    border-color: transparent;
    color: $im-button-text-style-color;
    text-decoration: none;
    box-shadow: none;
    &:hover, &:focus {
      background-color: $im-button-text-style-hover-background;
      color: $im-button-text-style-hover-color;
      text-decoration: underline;
      transform: translateY(0); // No lift for text buttons
    }
    &:active {
        background-color: darken($im-button-text-style-hover-background, 5%);
        box-shadow: none;
    }
  }

  // Loading state
  &.is-loading {
    color: transparent !important;
    pointer-events: none;
    &::after { // Bulma's spinner
      animation: im-spinner-spin 0.5s infinite linear;
      border: 2px solid $im-border-color;
      border-radius: $im-radius-rounded;
      border-right-color: transparent;
      border-top-color: transparent;
      content: "";
      display: block;
      height: 1em;
      width: 1em;
      position: absolute;
      left: calc(50% - (1em / 2));
      top: calc(50% - (1em / 2));
    }
  }

  // Disabled state
  &[disabled], &.is-disabled {
    background-color: $im-button-background; // Or a specific disabled bg color
    border-color: $im-button-border;     // Or a specific disabled border color
    box-shadow: none;
    opacity: 0.5;
    cursor: not-allowed;
  }

  // For button groups (.buttons)
  & + .button {
    margin-left: 0.5rem; // Default Bulma spacing
  }
}
.buttons { // Container for multiple buttons
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
  gap: 0.75rem; // Consistent gap for buttons
  &.has-addons { // Bulma class for connected buttons
    gap: 0;
    .button {
      margin-left: 0 !important; // Remove individual button margin
      &:not(:first-child) { border-top-left-radius: 0; border-bottom-left-radius: 0; }
      &:not(:last-child) { border-top-right-radius: 0; border-bottom-right-radius: 0; border-right-width: 0; }
      &:focus, &:hover { z-index: 1; } // Ensure focused/hovered button is on top
    }
  }
  &.is-centered { justify-content: center; }
  &.is-right { justify-content: flex-end; }
}

@keyframes im-spinner-spin {
  to { transform: rotate(360deg); }
}


// --- Cards ---
.card {
  background-color: $im-card-background;
  color: $im-card-text;
  border: 1px solid $im-card-border;
  border-radius: $im-radius-large; // Use the larger radius for cards
  box-shadow: $im-shadow; // Use the default IM shadow
  transition: box-shadow 0.25s ease-in-out, transform 0.25s ease-in-out, border-color 0.2s ease-in-out;
  display: flex; // For better internal layout control
  flex-direction: column; // Stack card elements vertically

  &:hover {
    box-shadow: $im-shadow-lg;
    transform: translateY(-4px); // Slightly more lift
    border-color: $im-border-color-strong;
  }

  .card-header {
    background-color: transparent; // No separate background for header
    border-bottom: 1px solid $im-card-footer-border; // Use footer border for consistency
    padding: 1rem 1.25rem; // Consistent padding
    box-shadow: none; // No shadow on header itself
    align-items: stretch; // Bulma default

    .card-header-title {
      color: $im-card-header-text;
      font-weight: $im-font-weight-semibold;
      font-size: 1.15rem; // Slightly larger header title
      padding: 0; // Remove Bulma's padding, handled by .card-header
      line-height: 1.3;
    }
    .card-header-icon {
      color: $im-text-light;
      cursor: pointer;
      padding: 0; // Handled by .card-header
      &:hover { color: $im-primary; }
    }
  }

  .card-image {
    display: block; // Ensure it behaves as a block
    position: relative;
    img {
      display: block; // Remove any extra space
      width: 100%;
      // If image is first child, round top corners
      &:first-child { border-radius: $im-radius-large $im-radius-large 0 0; }
    }
    // Add .is-overlay for content on image later if needed
  }

  .card-content {
    background-color: transparent;
    padding: 1.25rem; // Consistent padding
    flex-grow: 1; // Allow content to fill available space
    // Elements within .card-content will use .content styling if .content class is added,
    // or base HTML styling otherwise.
  }

  .card-footer {
    background-color: transparent;
    border-top: 1px solid $im-card-footer-border;
    padding: 0; // Footer items will have padding
    align-items: stretch; // Bulma default

    .card-footer-item {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0.85rem 1rem;
      color: $im-card-footer-text;
      font-size: $im-font-size-small;
      transition: color 0.2s ease, background-color 0.2s ease;
      &:not(:last-child) {
        border-right: 1px solid $im-card-footer-border;
      }
      &:hover {
        color: $im-link-color; // Use link color for hover
        background-color: $im-divider-color; // Very light hover bg
      }
    }
  }
}

// --- Box ---
.box {
  background-color: $im-box-background;
  color: $im-box-text;
  border-radius: $im-radius-large; // Consistent with cards
  box-shadow: $im-shadow-md;      // Slightly more prominent shadow for boxes
  padding: $im-box-padding;
  transition: box-shadow 0.2s ease-in-out, transform 0.2s ease-in-out;
  &:hover {
    box-shadow: $im-shadow-lg;
    transform: translateY(-2px);
  }
}

// --- Forms (Input, Textarea, Select, Checkbox, Radio) ---
// Common styles for form controls
.input, .textarea, .select select {
  font-family: $im-family-sans-serif;
  background-color: $im-input-background;
  border: 1px solid $im-input-border;
  border-radius: $im-radius;
  color: $im-input-text;
  font-size: $im-font-size-base;
  line-height: $im-line-height-base;
  padding: calc(0.6em - 1px) 0.85em; // From $im-input-padding-*
  box-shadow: $im-shadow-inner;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  width: 100%; // Make them block level by default for easier layout
  max-width: 100%; // Prevent overflow
  vertical-align: top; // Bulma default

  &::placeholder {
    color: $im-text-placeholder;
    opacity: 1;
  }

  &:hover {
    border-color: $im-input-border-hover;
  }

  &:focus, &.is-focused, &:active, &.is-active {
    outline: none;
    border-color: $im-input-border-focus;
    box-shadow: $im-shadow-inner, 0 0 0 0.125em $im-input-shadow-focus;
  }

  &[disabled], fieldset[disabled] & {
    background-color: darken($im-input-background, 3%);
    border-color: darken($im-input-border, 5%);
    box-shadow: none;
    color: $im-text-light;
    cursor: not-allowed;
    &::placeholder { color: rgba($im-text-light, 0.7); }
  }

  // Sizes
  &.is-small { font-size: $im-font-size-small; padding: calc(0.4em - 1px) 0.6em; }
  &.is-medium { font-size: 1.25rem; padding: calc(0.75em - 1px) 1em; } // Bulma size
  &.is-large { font-size: 1.5rem; padding: calc(0.9em - 1px) 1.25em; }  // Bulma size
}

.input { height: 2.75em; } // As per $im-input-height
.textarea {
  display: block;
  max-width: 100%;
  min-width: 100%;
  padding: 0.85em; // From $im-textarea-padding
  resize: vertical;
  min-height: 120px; // Default min height
}

.select { // Wrapper for select element
  display: inline-block;
  max-width: 100%;
  position: relative;
  vertical-align: top; // Bulma default
  height: 2.75em; // Match input height

  select {
    cursor: pointer;
    display: block;
    font-size: 1em; // Relative to .select wrapper
    max-width: 100%;
    outline: none;
    padding-right: 2.5em; // Space for arrow
    height: 100%; // Fill wrapper
    // Appearance reset
    -moz-appearance: none;
    -webkit-appearance: none;
    &::-ms-expand { display: none; } // IE arrow hide
  }
  // Arrow styling
  &::after {
    border: 1.5px solid $im-primary; // Use $im-select-arrow which is $im-primary
    border-radius: 2px;
    border-right: 0;
    border-top: 0;
    content: " ";
    display: block;
    height: 0.5em;
    width: 0.5em;
    pointer-events: none;
    position: absolute;
    top: 50%;
    transform: translateY(-50%) rotate(-45deg);
    right: 1.125em;
    margin-top: -1px; // Fine tune position
    z-index: 4; // Above select
    transform-origin: center;
    transition: transform 0.2s ease;
  }
  &:hover::after {
    border-color: $im-primary-dark;
  }
  &.is-multiple { // Bulma class for multiple select
    height: auto;
    select { height: auto; padding: 0; } // Reset height and padding
    &::after { display: none; } // No arrow for multiple select
  }
  // Sizes for select wrapper
  &.is-small { font-size: $im-font-size-small; height: 2.25em; }
  &.is-medium { font-size: 1.25rem; height: 3.25em; }
  &.is-large { font-size: 1.5rem; height: 3.75em; }
}


// Checkbox & Radio (custom styling)
.checkbox, .radio {
  cursor: pointer;
  display: inline-block;
  line-height: 1.25; // Align text with custom box
  position: relative;
  padding-left: 1.75em; // Space for custom control
  margin-right: 0.5rem;
  margin-bottom: 0.5rem; // Spacing below if they wrap
  user-select: none;
  color: $im-text;

  input[type="checkbox"], input[type="radio"] {
    opacity: 0; // Hide native control
    position: absolute;
    left: 0;
    z-index: -1;
  }

  // Custom control appearance
  &::before { // The box/circle
    content: "";
    position: absolute;
    left: 0;
    top: 0.125em; // Align with text
    width: 1.25em;
    height: 1.25em;
    border: 2px solid $im-input-border;
    background-color: $im-input-background;
    transition: border-color 0.2s ease, background-color 0.2s ease;
  }
  // Checkmark/dot
  &::after {
    content: "";
    position: absolute;
    left: 0; // Position relative to ::before
    top: 0.125em; // Align with text
    width: 1.25em; // Match ::before
    height: 1.25em; // Match ::before
    opacity: 0;
    transform: scale(0.5);
    transition: opacity 0.15s ease-out, transform 0.15s ease-out;
  }

  // Hover state
  &:hover::before {
    border-color: $im-input-border-hover;
  }

  // Checked state
  input:checked + &::before {
    background-color: $im-primary;
    border-color: $im-primary;
  }
  input:checked + &::after {
    opacity: 1;
    transform: scale(1);
  }

  // Focus state (visible focus)
  input:focus + &::before {
    border-color: $im-input-border-focus;
    box-shadow: 0 0 0 0.125em $im-input-shadow-focus;
  }

  // Disabled state
  &[disabled], input:disabled + & {
    color: $im-text-light;
    cursor: not-allowed;
    &::before {
      background-color: darken($im-input-background, 3%);
      border-color: darken($im-input-border, 5%);
    }
    input:checked + &::before {
        background-color: lighten($im-primary, 20%);
        border-color: lighten($im-primary, 20%);
    }
    input:checked + &::after { // Keep checkmark visible but lighter for disabled checked
        opacity: 0.6;
    }
  }
}

.checkbox::before { border-radius: $im-radius-small; }
.checkbox::after { // Checkmark style
  // SVG checkmark (URL-encoded)
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23#{str-slice(inspect($im-primary-invert), 2)}'%3E%3Cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 75%; // Adjust size of checkmark
}

.radio::before, .radio::after { border-radius: 50%; } // Radio is circular
.radio::after { // Dot style
  background-color: $im-primary-invert;
  width: 0.6em; // Smaller dot
  height: 0.6em;
  left: 0.325em; // Center dot
  top: 0.450em; // Center dot, adjusted for 0.125em top on ::before
  transform-origin: center;
}
input:checked + .radio::after {
    transform: scale(1); // Dot just appears, no size change on transform
}


// Field & Control (Bulma layout helpers for forms)
.field {
  &:not(:last-child) { margin-bottom: 0.75rem; } // Default Bulma
  &.has-addons { // Bulma class
    display: flex;
    justify-content: flex-start;
    .control {
      &:not(:last-child) { margin-right: -1px; } // Overlap borders
      &:not(:first-child) .button, &:not(:first-child) .input, &:not(:first-child) .select select { border-bottom-left-radius: 0; border-top-left-radius: 0; }
      &:not(:last-child) .button, &:not(:last-child) .input, &:not(:last-child) .select select { border-bottom-right-radius: 0; border-top-right-radius: 0; }
      &.is-expanded { flex-grow: 1; flex-shrink: 1; }
    }
  }
}
.label { // Styling for <label>
  color: $im-text-strong;
  display: block;
  font-size: $im-font-size-base;
  font-weight: $im-font-weight-semibold;
  margin-bottom: 0.5em;
  // Sizes
  &.is-small { font-size: $im-font-size-small; }
  &.is-medium { font-size: 1.25rem; } // Bulma size
  &.is-large { font-size: 1.5rem; }   // Bulma size
}
.help { // Helper text below inputs
  display: block;
  font-size: $im-font-size-small;
  margin-top: 0.25rem;
  color: $im-text-light;
  &.is-danger { color: $im-danger; } // State colors for help text
  &.is-success { color: $im-success; }
  // etc. for other states
}


// --- Tags ---
.tag {
  align-items: center;
  background-color: $im-divider-color; // Use a very light grey
  border-radius: $im-radius-small;
  color: $im-text;
  display: inline-flex;
  font-size: $im-font-size-smaller; // Slightly smaller than small
  font-weight: $im-font-weight-medium;
  height: 2em;
  justify-content: center;
  line-height: 1.5;
  padding-left: 0.85em;
  padding-right: 0.85em;
  white-space: nowrap;
  transition: background-color 0.2s ease, color 0.2s ease, opacity 0.2s ease;

  // Colors
  &.is-primary { background-color: $im-primary; color: $im-primary-invert; }
  &.is-link { background-color: $im-link-color; color: $im-link-color-invert; } // Uses primary if link color is primary
  &.is-info { background-color: $im-info; color: $im-info-invert; }
  &.is-success { background-color: $im-success; color: $im-success-invert; }
  &.is-warning { background-color: $im-warning; color: $im-warning-invert; }
  &.is-danger { background-color: $im-danger; color: $im-danger-invert; }
  &.is-light { background-color: $im-divider-color; color: $im-text-strong; } // Already default, but explicit
  &.is-dark { background-color: $im-text-strong; color: $im-text-invert; }

  // Sizes
  &.is-medium { font-size: $im-font-size-small; height: 2.25em; padding: 0 1em;}
  &.is-large { font-size: $im-font-size-base; height: 2.5em; padding: 0 1.25em; }

  // Modifiers
  &.is-rounded { border-radius: $im-radius-rounded; }
  .icon:first-child:not(:last-child) { margin-left: -0.375em; margin-right: 0.25em; }
  .icon:last-child:not(:first-child) { margin-left: 0.25em; margin-right: -0.375em; }

  // Delete button within tag
  .delete { // Bulma's .delete class
    margin-left: 0.35em;
    margin-right: -0.45em; // Pull it closer
    // .delete styling itself comes from Bulma's generic element or needs to be defined
  }
  &:hover:not(.is-static) { // Subtle hover for non-static tags
    opacity: 0.85;
  }
}
.tags { // Container for multiple tags
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
  gap: 0.5rem; // Gap between tags
  margin-bottom: -0.5rem; // Counteract last tag's margin
  .tag { margin-bottom: 0.5rem; } // Ensure vertical spacing if they wrap
  &.has-addons .tag { margin-right: 0; margin-bottom: 0;
    &:not(:first-child) { border-bottom-left-radius: 0; border-top-left-radius: 0; }
    &:not(:last-child) { border-bottom-right-radius: 0; border-top-right-radius: 0; }
  }
  &.is-centered { justify-content: center; }
  &.is-right { justify-content: flex-end; }
}

// --- Notifications / Messages ---
// .message class is already styled in components.scss based on your snippet
// If you use Bulma's .notification:
.notification {
  background-color: $im-body-background; // Lighter than message default
  border-radius: $im-radius;
  color: $im-text;
  padding: 1.25rem 2.5rem 1.25rem 1.5rem; // Standard Bulma padding
  position: relative;
  border-left: 4px solid $im-divider-color; // Default subtle border
  box-shadow: $im-shadow-sm;
  transition: opacity 0.3s ease, transform 0.3s ease;

  a:not(.button) { color: $im-link-color; text-decoration: underline; &:hover { color: $im-link-color-hover; } }
  strong { color: $im-text-strong; }
  code, pre { background: $im-content-background; } // Code within notification
  pre code { background: transparent; }
  .title, .subtitle { color: $im-text; } // Ensure titles in notifications are themed

  // Colors
  &.is-primary { background-color: lighten($im-primary, 40%); color: $im-primary-dark; border-left-color: $im-primary; a:not(.button) {color: $im-primary-dark;} strong {color: $im-primary-dark;}}
  &.is-link { background-color: lighten($im-link-color, 40%); color: $im-link-color-dark; border-left-color: $im-link-color; a:not(.button) {color: $im-link-color-dark;} strong {color: $im-link-color-dark;}}
  &.is-info { background-color: lighten($im-info, 35%); color: $im-info-dark; border-left-color: $im-info; a:not(.button) {color: $im-info-dark;} strong {color: $im-info-dark;}}
  &.is-success { background-color: lighten($im-success, 40%); color: $im-success-dark; border-left-color: $im-success; a:not(.button) {color: $im-success-dark;} strong {color: $im-success-dark;}}
  &.is-warning { background-color: lighten($im-warning, 30%); color: darken($im-warning, 30%); border-left-color: $im-warning; a:not(.button) {color: darken($im-warning,30%);} strong {color: darken($im-warning,30%);}}
  &.is-danger { background-color: lighten($im-danger, 35%); color: $im-danger-dark; border-left-color: $im-danger; a:not(.button) {color: $im-danger-dark;} strong {color: $im-danger-dark;}}
  &.is-light { background-color: $im-divider-color; color: $im-text-strong; border-left-color: $im-border-color-strong; }

  .delete { // Bulma's .delete button
    position: absolute;
    right: 0.75rem;
    top: 0.75rem;
    // .delete styling itself needs to be defined if not using Bulma's SCSS
  }
}

// --- Table ---
// .table class and its elements are styled in _typography.scss .content table
// Or you can add more specific .table styles here if used outside .content
// Example for a standalone .table class:
.table {
  background-color: $im-content-background;
  color: $im-text;
  width: 100%;
  margin-bottom: $im-block-spacing; // Consistent spacing
  border-collapse: collapse; // Cleaner look

  th, td {
    border: 1px solid $im-divider-color; // All cells bordered
    padding: 0.75em 1em;
    text-align: left;
    vertical-align: top;
  }
  thead th, tfoot th {
    background-color: $im-body-background; // Light bg for header/footer
    color: $im-text-strong;
    font-weight: $im-font-weight-semibold;
    border-bottom-width: 2px; // Thicker border below header
    border-top-width: 2px;    // Thicker border above footer
  }
  tbody tr:nth-child(even) { // Striped rows
    background-color: $im-body-background;
  }
  tbody tr:hover { // Hover effect
    background-color: lighten($im-body-background, 2%);
    // transition: background-color 0.15s ease-in-out;
  }
  &.is-bordered th, &.is-bordered td { border-width: 1px; } // Bulma modifier
  &.is-striped tbody tr:nth-child(even) { background-color: $im-body-background; } // Ensure consistency
  &.is-narrow th, &.is-narrow td { padding: 0.35em 0.6em; } // Bulma modifier
  &.is-hoverable tbody tr:hover { background-color: lighten($im-body-background, 2%); } // Ensure consistency
  &.is-fullwidth { width: 100%; } // Bulma modifier
}


// --- General Utility: Section with title (IM-prefixed class) ---
.im-section-with-title {
  padding-top: 3rem;
  padding-bottom: 3rem;
  .im-section-title { // Assumes you have .im-section-title defined in _custom.scss
    margin-bottom: 2.5rem; // Generous spacing after title
  }
}

// Micro-interaction: Smooth scroll to anchor links
html { scroll-padding-top: $im-navbar-height + 1rem; } // Offset for fixed navbar when scrolling to ID

// Add more component styles here...
// e.g., .pagination, .tabs, .panel, .modal, .breadcrumb, .level, .media, .menu etc.
// Always using your $im- prefixed variables.