// _sass/components/_hero.scss

.hero {
  position: relative; // For background video/image and overlay positioning
  overflow: hidden;  // Ensures pseudo-elements or video don't overflow

  // Default hero text colors (can be overridden by .is-primary, .is-dark etc.)
  .title,
  .subtitle {
    color: var(--im-color-text-headings); // Default to standard heading color
  }
  strong {
    color: inherit; // Inherit color from parent (title/subtitle)
  }

  // Specific hero titles and subtitles styling
  .hero-main-title {
    font-weight: $im-font-weight-bold;
    margin-bottom: $im-spacing-unit * 0.75;
    // color: var(--im-color-text-headings); // Already set by .title
  }

  .hero-main-subtitle {
    font-weight: $im-font-weight-normal;
    // color: var(--im-color-text-light); // Already set by .subtitle
    opacity: 0.9;
    margin-bottom: $im-spacing-unit * 1.5;
  }

  // Background Image & Video Styling
  &.has-image-background,
  &.has-video-background {
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;

    // Ensure text is readable on image/video backgrounds
    // These will be overridden by specific hero classes like .is-primary
    .title,
    .subtitle,
    .hero-breadcrumbs a,
    .hero-breadcrumbs span,
    .hero-custom-content,
    .hero-custom-content p,
    .hero-custom-content a {
      color: var(--im-color-primary-inverted); // Default to white text on image/video
      position: relative;
      z-index: 2; // Above overlay
    }
    .hero-breadcrumbs li + li::before { // Breadcrumb separator
        color: rgba(var(--im-color-primary-inverted-rgb, 255, 255, 255), 0.7);
    }

    .hero-buttons-group .button {
        &.is-primary {
            // Primary button on image/video might need inverted style
        }
        &.is-light, &.is-white {
            // Light/white buttons on image/video often look good as is, or slightly transparent
             background-color: rgba(255,255,255,0.9) !important;
             color: var(--im-color-primary) !important; // Primary text on light button
             &:hover {
                background-color: rgba(255,255,255,1) !important;
             }
        }
         // Add styles for other button types if they need adjustments on image/video
    }
  }

  .hero-background-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1; // Between background and content
    // background-color is set inline via style attribute
  }

  .hero-background-video {
    position: absolute;
    top: 50%;
    left: 50%;
    width: auto;
    height: auto;
    min-width: 100%;
    min-height: 100%;
    transform: translate(-50%, -50%);
    z-index: 0; // Furthest back
    object-fit: cover; // Ensures video covers the area
  }

  // Hero Head (for breadcrumbs or top nav)
  .hero-head {
    padding-top: $im-spacing-unit * 1.5;
    padding-bottom: $im-spacing-unit * 0.5;
    position: relative;
    z-index: 2; // Above overlay/video
  }

  // Breadcrumbs specific styling within hero
  .hero-breadcrumbs {
    &.breadcrumb { // Target Bulma's breadcrumb specifically
      margin-bottom: $im-spacing-unit * 1;
      a {
        color: var(--im-color-text-muted); // Default breadcrumb color
        transition: color 0.2s ease;
        &:hover {
          color: var(--im-color-primary);
        }
      }
      li.is-active a {
        color: var(--im-color-text-strong); // Active breadcrumb
        font-weight: $im-font-weight-semibold;
      }
      li + li::before { // Separator
        color: var(--im-color-text-muted);
        opacity: 0.7;
      }
      span.inactive-breadcrumb { // For non-link collection label
        color: var(--im-color-text-muted);
        padding: 0 0.75em;
      }
    }
  }

  // Hero Body (main content)
  .hero-body {
    padding-top: $im-spacing-unit * 2; // Adjust as needed
    padding-bottom: $im-spacing-unit * 2; // Adjust as needed
    position: relative;
    z-index: 2; // Above overlay/video
  }

  // Buttons Group
  .hero-buttons-group {
    margin-top: $im-spacing-unit * 2;
    .button {
      margin: ($im-spacing-unit * 0.5) ($im-spacing-unit * 0.375);
    }
  }

  // Custom HTML Content Area
  .hero-custom-content {
    margin-top: $im-spacing-unit * 1.5;
    // Style child elements as needed
    p {
      font-size: 1.1rem;
      line-height: 1.7;
      opacity: 0.95;
    }
    a {
      // color: inherit; // Inherit from parent or set specific color
      // text-decoration: underline;
      // &:hover {
      //   text-decoration: none;
      // }
    }
  }

  // Hero Foot (for secondary nav or other elements)
  .hero-foot {
    padding-bottom: $im-spacing-unit * 1.5;
    position: relative;
    z-index: 2; // Above overlay/video
  }

  // --- Contextual Hero Styles (using CSS variables) ---
  &.is-primary {
    background-color: var(--im-color-primary) !important; // Ensure override
    .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span, .hero-custom-content, .hero-custom-content p, .hero-custom-content a {
      color: var(--im-color-primary-inverted) !important;
    }
    .hero-breadcrumbs li + li::before {
        color: rgba(var(--im-color-primary-inverted-rgb, 255, 255, 255), 0.7);
    }
    // Buttons specific to primary hero
    .button {
        &.is-light, &.is-white {
            background-color: var(--im-color-primary-inverted) !important;
            color: var(--im-color-primary) !important;
            border-color: var(--im-color-primary-inverted) !important;
            &:hover {
                background-color: darken(var(--im-color-primary-inverted), 5%) !important;
                border-color: darken(var(--im-color-primary-inverted), 5%) !important;
            }
        }
        &.is-primary.is-outlined { // Primary outlined button on primary hero
            border-color: var(--im-color-primary-inverted) !important;
            color: var(--im-color-primary-inverted) !important;
            &:hover {
                background-color: rgba(var(--im-color-primary-inverted-rgb, 255, 255, 255), 0.1) !important;
            }
        }
    }
  }

  &.is-link { background-color: var(--im-color-link) !important; .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span { color: var(--im-color-link-inverted) !important; } .hero-breadcrumbs li+li::before {color: rgba(red($im-light-color-link-inverted), green($im-light-color-link-inverted), blue($im-light-color-link-inverted), 0.7); } }
  &.is-info { background-color: var(--im-color-info) !important; .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span { color: var(--im-color-info-inverted) !important; } .hero-breadcrumbs li+li::before {color: rgba(red($im-light-color-info-inverted), green($im-light-color-info-inverted), blue($im-light-color-info-inverted), 0.7); } }
  &.is-success { background-color: var(--im-color-success) !important; .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span { color: var(--im-color-success-inverted) !important; } .hero-breadcrumbs li+li::before {color: rgba(red($im-light-color-success-inverted), green($im-light-color-success-inverted), blue($im-light-color-success-inverted), 0.7); } }
  &.is-warning { background-color: var(--im-color-warning) !important; .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span { color: var(--im-color-warning-inverted) !important; } .hero-breadcrumbs li+li::before {color: rgba(red($im-light-color-warning-inverted), green($im-light-color-warning-inverted), blue($im-light-color-warning-inverted), 0.7); } }
  &.is-danger { background-color: var(--im-color-danger) !important; .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span { color: var(--im-color-danger-inverted) !important; } .hero-breadcrumbs li+li::before {color: rgba(red($im-light-color-danger-inverted), green($im-light-color-danger-inverted), blue($im-light-color-danger-inverted), 0.7); } }

  &.is-dark {
    background-color: var(--im-color-text-strong) !important;
    .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span, .hero-custom-content p {
      color: var(--im-color-background) !important; // Light text on dark hero
    }
    .hero-breadcrumbs li + li::before {
        color: rgba(red($im-light-color-background), green($im-light-color-background), blue($im-light-color-background), 0.7);
    }
  }
  &.is-light {
    background-color: var(--im-color-background) !important; // Or a specific light hero bg var
    .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span {
      color: var(--im-color-text-headings) !important; // Dark text on light hero
    }
     .hero-breadcrumbs li + li::before {
        color: var(--im-color-text-muted);
    }
  }

  // Adjustments for hero sizes (padding in hero-body)
  &.is-small .hero-body {
    padding-top: $im-spacing-unit * 1.5;
    padding-bottom: $im-spacing-unit * 1.5;
  }
  &.is-large .hero-body {
    padding-top: $im-spacing-unit * 6;
    padding-bottom: $im-spacing-unit * 6;
  }
  // is-medium is default
  // is-fullheight and is-fullheight-with-navbar are handled by Bulma's vertical centering.
}

// Dark Mode Specifics for Hero
html.im-is-dark-mode {
  .hero {
    // Default hero text in dark mode
    .title, .subtitle { color: var(--im-color-text-headings); }
    .hero-breadcrumbs {
      &.breadcrumb {
        a { color: var(--im-color-text-muted); &:hover { color: var(--im-color-primary); }}
        li.is-active a { color: var(--im-color-text-strong); }
        li + li::before { color: var(--im-color-text-muted); }
        span.inactive-breadcrumb { color: var(--im-color-text-muted); }
      }
    }

    // Background image/video text readability in dark mode
    &.has-image-background,
    &.has-video-background {
      .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span, .hero-custom-content p, .hero-custom-content a {
        color: var(--im-color-primary-inverted); // Usually still white/light
      }
      .hero-breadcrumbs li + li::before {
        color: rgba(var(--im-color-primary-inverted-rgb, 255, 255, 255), 0.7);
      }
       .hero-buttons-group .button {
            &.is-light, &.is-white {
                 background-color: rgba(var(--im-dark-color-surface-rgb, 44, 44, 44),0.9) !important; // Dark surface for buttons
                 color: var(--im-color-primary) !important;
                 border-color: transparent !important;
                 &:hover {
                    background-color: rgba(var(--im-dark-color-surface-rgb, 44, 44, 44),1) !important;
                 }
            }
        }
    }

    // Contextual heroes in dark mode
    // Primary might use a different primary color in dark mode if defined
    &.is-primary {
      background-color: var(--im-color-primary) !important; // Uses dark mode's primary
      .title, .subtitle, .hero-breadcrumbs a, .hero-breadcrumbs span { color: var(--im-color-primary-inverted) !important; }
      .hero-breadcrumbs li + li::before { color: rgba(var(--im-color-primary-inverted-rgb, 255, 255, 255), 0.7); }
      .button {
        &.is-light, &.is-white {
            background-color: var(--im-color-primary-inverted) !important;
            color: var(--im-color-primary) !important; // Dark primary text on light button
            border-color: var(--im-color-primary-inverted) !important;
            &:hover {
                background-color: darken(var(--im-color-primary-inverted), 5%) !important;
                border-color: darken(var(--im-color-primary-inverted), 5%) !important;
            }
        }
      }
    }
    // For other contextual heroes, their dark mode --im-color-X variables will apply.
    // Text inversion will depend on those variables.
  }
}