--- 
--- 

// ==== CUSTOM COLOR PALETTE (APPROXIMATED FROM UI with 'im-' prefix) ====
$im-purple-primary: #7F56D9;
$im-blue-active: #4A47C2;
$im-text-dark: #101828;     // For strong headings
$im-logo-text-dark: #301E50;
$im-text-body: #4D3D6F;     // Softer body text
$im-text-grey: #667085;     // For subtitles, meta
$im-text-grey-light: #98A2B3;
$im-background-page: #FDFCFE;
$im-border-default: #EDE9F2;
$im-divider-default: #EAECF0;
$im-button-bg-secondary: #F0EEF3;
$im-white-custom: #FFFFFF; // Explicitly defining our white, can be same as Bulma's
$im-black-custom: #000000; // Explicitly defining our black

// ==== BULMA VARIABLE OVERRIDES ====

// 1. General Initial Variables (must be defined before they are used by other Bulma variables)
$family-sans-serif: "Inter", "Outfit", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
$primary: $im-purple-primary;

// It's good practice to define $black and $white if you plan to use them extensively in overrides,
// even if they match Bulma's, to ensure they are available when Bulma calculates derived colors.
// Or, rely on Bulma to define them and use `var(--bulma-white)` in CSS if needed for dynamic access.
// For Sass compilation, if Bulma defines $white, it will be available after import.
// If we set scheme-main to $white, Bulma must have defined $white first.
// Let's assume Bulma defines its own $white and $black, which are typically hsl(0, 0%, 100%) and hsl(0, 0%, 4%).
// We will use our custom $im-white-custom for card backgrounds if we want explicit control.

$body-background-color: $im-background-page;
$body-size: 1rem; // Approx 16px
$body-color: $im-text-body; // Setting text color for body directly
$body-line-height: 1.65;

// Text Colors (can be derived or explicit)
$text: $im-text-body;
$text-light: $im-text-grey;
$text-strong: $im-text-dark;
$link: $im-logo-text-dark; // Or $primary
$link-hover: $primary;

// Backgrounds
$background: $im-background-page; // Default background for elements like .section if not overridden

// Scheme colors (These are crucial and are used by many components)
// Bulma typically defines $white and $black.
// If you want to ensure your custom white is used:
$white: $im-white-custom; // Override Bulma's $white with our custom one.
$black: $im-black-custom; // Override Bulma's $black.

$scheme-main: $white;         // Main background for components like cards, content areas
$scheme-main-bis: darken($white, 2%);
$scheme-main-ter: darken($white, 4%);
$scheme-invert: $im-text-dark; // Text color on light scheme-main backgrounds (e.g., for $primary button text)
                                 // Or $black if you want pure black text on primary buttons

// Borders
$border: $im-border-default;
$border-light: lighten($im-border-default, 5%);
$border-hover: $primary; // Or $im-border-default if hover shouldn't change border color much

// Radii
$radius-small: 6px;
$radius: 8px;
$radius-large: 12px;
$control-radius: $radius; // For form inputs, buttons

// 2. Component Specific Variables

// Navbar
$navbar-background-color: $im-background-page; // Navbar background same as body
$navbar-item-color: $im-text-body;
$navbar-item-hover-color: $primary;
$navbar-item-hover-background-color: transparent; // UI has no bg change on hover, just text color
$navbar-item-active-background-color: $im-blue-active; // For the "Work" item in UI
$navbar-item-active-color: $white;                  // Text on active "Work" item
$navbar-height: 64px;
$navbar-item-img-max-height: 28px;

// Buttons
$button-color: $white; // Text color for $primary button
$button-background-color: $primary;
$button-border-color: $primary;
$button-hover-background-color: darken($primary, 5%);
$button-hover-border-color: darken($primary, 5%);
$button-focus-border-color: darken($primary, 10%); // Use Bulma's default focus outline if preferred
$button-active-background-color: darken($primary, 10%);
$button-active-border-color: darken($primary, 10%);
$button-padding-vertical: 0.65em;
$button-padding-horizontal: 1.65em;
$button-family: $family-sans-serif; // Ensure buttons use the main font

// Light Buttons (like "Resume", "Quick Access" in UI)
$button-light-background-color: $im-button-bg-secondary;
$button-light-color: $im-text-body; // Use body text for contrast
$button-light-border-color: $im-button-bg-secondary; // Or a very subtle border like $im-border-default
$button-light-hover-background-color: darken($im-button-bg-secondary, 4%);
$button-light-hover-color: $im-logo-text-dark; // Darker text on hover
$button-light-focus-border-color: $primary; // Or consistent with light button borders

// Card
$card-background-color: $white; // UI cards are distinctly white
$card-color: $text;
$card-header-background-color: $white; // UI card headers are also white or very light
$card-header-color: $text-strong;
$card-header-weight: $weight-semibold;
$card-shadow: 0 4px 12px rgba(16, 24, 40, 0.03), 0 1px 2px rgba(16, 24, 40, 0.01); // Softer, more layered shadow from UI
$card-radius: $radius; // Consistent with general radius
$card-footer-border-top: 1px solid $im-divider-default; // UI has a clear divider

// Tags
$tag-background-color: $im-button-bg-secondary; // Default tag background
$tag-color: $im-text-body;
$tag-radius: $radius-small; // Slightly rounded tags like UI

// Typography (already partially defined above, adding specifics)
$family-primary: $family-sans-serif; // Ensure Bulma uses this for primary font needs

$size-1: 2.75rem; // For "I'm Enji"
$size-2: 2.25rem;
$size-3: 1.75rem; // Section Headings like "Eye Catching..."
$size-4: 1.25rem; // Card titles, other subheadings
$size-5: 1.125rem;
$size-6: 1rem;    // Base body text (~16px)
$size-7: 0.875rem; // Meta text, small tags, navbar end items

$weight-light: 300;
$weight-normal: 400;
$weight-medium: 500;
$weight-semibold: 600;
$weight-bold: 700;

$title-color: $im-text-dark;
$title-weight: $weight-bold;
$title-line-height: 1.2;
$title-family: $family-sans-serif; // Ensure titles use the main font

$subtitle-color: $im-text-grey;
$subtitle-weight: $weight-normal;
$subtitle-line-height: 1.4;
$subtitle-family: $family-sans-serif;

// Layout & Spacing
$section-padding: 5rem 1.5rem;
$section-padding-medium: 6.5rem 1.5rem;
$section-padding-large: 8rem 1.5rem;
$gap: 32px; // Default Bulma column gap (can adjust based on UI's feel)

// Control (used for inputs, select, etc.)
$control-border-width: 1px;
$control-height: 2.8em; // Slightly taller controls often look more modern
$control-padding-vertical: calc(0.7em - #{$control-border-width});
$control-padding-horizontal: calc(1em - #{$control-border-width});


// ==== IMPORT BULMA ====
// Make sure this path is correct for your project structure
@import "bulma/bulma"; // Or your specific path to node_modules/bulma/bulma.sass


// ==== ADDITIONAL GLOBAL STYLES / MINOR OVERRIDES (use sparingly) ====
// These would go AFTER importing Bulma if they need to override compiled Bulma styles.
// However, the goal is to do most with variables.

// Example for the 'enjidev' logo style if not achievable via navbar-item vars
.im-navbar-logo .im-logo-e {
    color: $primary; // Uses the new $primary
}
.im-navbar-logo .im-logo-dev {
    color: $primary; // Or a variant like darken($primary, 10%)
    opacity: 0.7; // As in UI
}

// Specific active 'Work' navbar item style if variables aren't enough
.navbar-item.im-work-active {
    background-color: $im-blue-active;
    color: $white !important; // Use our defined $white
    border-radius: $radius-small;
    padding-left: 1.25em !important; // Specific padding
    padding-right: 1.25em !important;
    line-height: 1.5; // Adjust line height if needed for vertical centering with padding
    height: auto; // Let padding define height
    // To make it vertically centered if navbar-height is fixed:
    // display: inline-flex;
    // align-items: center;
    // height: calc(#{$navbar-height} - 1.5rem); // Example, adjust based on desired padding
    // margin-top: 0.75rem;
    // margin-bottom: 0.75rem;
}
.navbar-item.im-work-active:hover {
    background-color: darken($im-blue-active, 5%);
}
.navbar-item.im-work-active .icon.im-active-arrow {
    margin-left: 0.5em;
    path { // If the arrow is an SVG
        fill: $white;
    }
}

// Quick Access Button specifics if variable overrides are not sufficient
.im-quick-access-button {
    background-color: $button-light-background-color; // Should be picked up by var
    border: none; // Or 1px solid $button-light-border-color
    color: $button-light-color;
    font-weight: $weight-medium;
    font-size: $size-7; // Use Bulma size variables
    border-radius: $radius-small;
    // Padding already handled by $button-padding-* vars

    &:hover { // Hover state handled by $button-light-hover-* vars
        // background-color: $button-light-hover-background-color;
        // color: $button-light-hover-color;
    }

    .im-quick-access-key {
        background-color: darken($button-light-background-color, 5%);
        color: $button-light-color; // Or a slightly darker shade
        border-radius: 3px;
        padding: 0.1em 0.4em;
        font-size: 0.8em; // Relative to parent button
        margin-left: 0.75em;
        font-weight: $weight-semibold;
    }
}

// HTML and Body base styles (moved from inline to Sass for better organization)
html {
    background-color: $body-background-color; // Apply grid to html for full page
    // background-image: radial-gradient(lighten($im-border-default, 10%) 0.5px, transparent 0.5px);
    // background-size: 16px 16px; /* Adjust size of grid */
}

body {
    color: $body-color;
    font-size: $body-size;
    font-weight: $weight-normal; // Default body font weight
    line-height: $body-line-height;
    font-family: $family-primary; // Ensure body uses the primary font
    // The subtle dot grid background from UI
    // Can be applied to body or html. Applying to html might be better for full viewport coverage.
    // Moved to html tag above for better coverage.
}

// Wrapper for main content if you want to constrain its width like the UI
// .main-content-wrapper {
// max-width: 1200px; // Or your preferred max width, could be a variable
// margin: 0 auto;
// padding: 0 1.5rem; // Could use $gap or a fraction of it
// }