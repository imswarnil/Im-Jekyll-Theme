// theme.scss
@use "sass:math"; // If you still need math.div

// --- HTML & BODY (Grid lines and basic setup) ---
html {
    // background-color is now set by Bulma's $body-background-color variable
    scroll-behavior: smooth;
}
body {
    // font-family, color, line-height are set by Bulma using your overridden variables.
    position: relative;
    overflow-x: hidden;
}
body::before { /* The grid itself */
    content: "";
    position: fixed;
    top: 0; left: 0; width: 100vw; height: 100vh;
    background-image: radial-gradient($border-light 0.5px, transparent 0.5px); // Uses your themed $border-light
    background-size: 28px 28px;
    z-index: -2;
    opacity: 0.4;
}
body::after { /* The fading overlay */
    content: "";
    position: fixed;
    top: 0; left: 0; width: 100%; height: 150vh;
    // $navbar-height is now a Bulma variable available here
    background: linear-gradient(
        to bottom,
        rgba(red($body-background-color), green($body-background-color), blue($body-background-color), 0) $navbar-height,
        rgba(red($body-background-color), green($body-background-color), blue($body-background-color), 0.3) calc(#{$navbar-height} + 10vh),
        $body-background-color calc(#{$navbar-height} + 50vh)
    );
    z-index: -1;
    pointer-events: none;
}


// --- Custom Component Styles & Layouts for Enji Dev UI ---

// Navbar Logo (Example of a custom class if needed)
.im-navbar-logo { // If you add this class to your logo <a> tag
    .im-logo-e { color: $primary; } // $primary is now your Enji purple
    .im-logo-dev { color: $primary; opacity: 0.75; }
}

// Active "Work" navbar item (if variables aren't sufficient for exact look)
.navbar-item.im-work-active { // Add .im-work-active to the "Work" <a> tag
    background-color: $info !important; // $info is now your Enji active blue
    color: $info-invert !important;     // $info-invert is now $white
    border-radius: $radius-small !important; // Uses your themed radius
    padding: 0.5em 1.1em !important;     // Custom padding
    display: inline-flex;
    align-items: center;
    max-height: calc(#{$navbar-height} - 2rem); // Example
    margin-top: auto;
    margin-bottom: auto;
    &:hover {
        background-color: darken($info, 5%) !important;
    }
    .icon.im-active-arrow svg path { // If you have an SVG arrow inside
        fill: $info-invert;
    }
}

// Quick Access Button
.im-quick-access-button { // Add to the button element
    // It will primarily use .button.is-light styles, which we themed
    font-weight: $weight-medium;
    font-size: $size-7;
    .im-quick-access-key { // Add to the "Q" span
        background-color: darken($light, 7%); // $light is now your themed light button bg
        color: $text; // Or $grey-darker
        border-radius: 3px;
        padding: 0.15em 0.45em;
        font-size: 0.8em;
        margin-left: 0.75em;
        font-weight: $weight-semibold;
    }
}

// Example: Hero Section specific styling (if Bulma's .hero isn't enough)
.hero.im-hero-section { // Add .im-hero-section to your hero
    // background-color: $body-background-color; // Or a specific hero background
    padding-top: 4rem; // Adjust as needed
    padding-bottom: 4rem;
    .im-hero-greeting {
        font-size: $size-3; // Example
        color: $text-light;
        margin-bottom: 0.5rem;
    }
    .im-hero-title { // Your custom class for the large "I'm Enji Kusnadi"
        font-size: 4.5rem;
        line-height: 1.05;
        font-weight: $weight-extrabold;
        color: $black; // Your themed black
        margin-bottom: 1rem;
        .im-hero-name-highlight { color: $primary; }
    }
    .im-hero-subtitle {
        font-size: $size-4;
        color: $text;
        max-width: 600px;
        line-height: 1.6;
        margin-bottom: 2.5rem;
    }
    // ... etc. for other specific parts of your UI
}

// Your existing styles for .posts, .post-card, .post, .page, .kg-*, .comments, .footer etc.
// can remain in theme.scss. Review them to see how many are now covered by
// Bulma variable overrides. You can likely remove/simplify many of them.
// For example, h1-h6 styles are now largely handled by Bulma's .title class and its variables.

// Headings (Your existing h1-h6 from theme.scss might conflict or be redundant now)
// Review and keep only if Bulma's .title classes (now themed) are not sufficient.
// Example: if you need h1 to be different from .title.is-1
// h1 {
//   font-size: calc( ( 1rem * 1.6 ) + 0.8vw); // Your responsive font size
//   font-weight: $weight-bold; // Use themed weight
//   line-height: 1.2;
//   margin: 0 0 ($gap * 0.5); // Use themed gap
//   color: $title-color; // Use themed title color
// }
// ... and so on for h2-h6, only if truly necessary.

// Link styling is now primarily from $link, $link-hover.
// a {
//   transition: color .2s ease; // $speed can be used here: transition: color $speed $easing;
//   // text-decoration: underline; // If you want underlines, Bulma removes them by default.
// }

// ... (Continue with your other custom styles from theme.scss, adapting them to use
//      your new Bulma-themed variables where possible, e.g., $primary, $gap, $radius, etc.) ...

.footer {
  // Footer styling from your theme.scss
  // Try to use Bulma variables where they make sense.
  // For example, $footer-background-color could be set to $body-background-color
  // or $scheme-main-ter
}