// theme.scss
@use "sass:math"; // If you use math.div

// --- HTML & BODY ---
html {
    background-color: $body-background-color; // This is now your themed page background
    scroll-behavior: smooth;
}
body {
    position: relative;
    overflow-x: hidden;
    // Font, color, line-height will come from Bulma using your themed variables
}
body::before { /* The grid itself */
    content: "";
    position: fixed;
    top: 0; left: 0; width: 100vw; height: 100vh;
    background-image: radial-gradient($border-light 0.5px, transparent 0.5px);
    background-size: 28px 28px;
    z-index: -2;
    opacity: 0.4;
}
body::after { /* The fading overlay */
    content: "";
    position: fixed;
    top: 0; left: 0; width: 100%; height: 150vh;
    $navbar-height-val: $navbar-height; // Use the themed navbar-height
    background: linear-gradient(
        to bottom,
        rgba(red($body-background-color), green($body-background-color), blue($body-background-color), 0) $navbar-height-val,
        rgba(red($body-background-color), green($body-background-color), blue($body-background-color), 0.3) calc(#{$navbar-height-val} + 10vh),
        $body-background-color calc(#{$navbar-height-val} + 50vh)
    );
    z-index: -1;
    pointer-events: none;
}

// --- Headings (from your theme.scss) ---
// These will now use your themed $family-primary, weights, and colors implicitly if not overridden here
h1 {
  font-size: calc( ( 1rem * 1.6 ) + 0.8vw); // Your responsive font size
  font-weight: $weight-bold; // Use themed weight
  line-height: 1.2;
  margin: 0 0 ($gap * 0.5); // Use themed gap (Bulma's $gap)
  color: $title-color; // Use themed title color
}
// ... (your other h2-h6 styles, update variables to use Bulma's themed ones) ...
h2 {
  font-size: calc( ( 1rem * 1.3 ) + 0.8vw);
  font-weight: $weight-bold;
  line-height: 1.2;
  margin: 0 0 ($gap * 0.6); // Use Bulma's $gap or your $im-spacing-unit
  color: $title-color;
}
// etc.

a {
  transition: color $speed $easing; // Use themed speed and easing
  // color: $link; // Link color is already set by Bulma variable
}
a:hover {
    // color: $link-hover; // Already set by Bulma variable
}


// --- Your other custom classes ---
// .header, .hero, .posts, .post-card, .footer, etc.
// Adapt these to use the Bulma variables we themed in settings.scss.
// For example:
.header .navbar {
    // background: transparent; // This might be fine if navbar is over hero
    min-height: $navbar-height; // Use themed variable
    &-menu .navbar-item {
        // color: $white; // This was for a transparent navbar over dark hero
                         // If navbar is white bg, use $navbar-item-color
        color: $navbar-item-color;
        font-weight: $weight-semibold; // Use themed weight
        &:hover {
            // background-color: transparent;
            // color: $primary; // $navbar-item-hover-color and $navbar-item-hover-background-color handle this
        }
    }
}

.hero-body {
    // padding: 5rem 1.5rem; // $section-padding can be used or specific values
    .title {
        // margin-bottom: math.div($gap, 2); // Use Bulma $gap
        // font-weight: $weight-extrabold !important; // Your $im-font-weight-extra-bold if defined and needed
    }
}

// ... and so on for the rest of your theme.scss.
// The goal is to make `theme.scss` mostly for structural CSS and very specific overrides
// that Bulma variables cannot achieve.